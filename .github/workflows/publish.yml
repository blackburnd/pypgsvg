name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.2.3, etc.
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
    
    - name: Build package
      run: python -m build
    
    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  test:
    name: Test package ðŸ§ª
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y graphviz
    
    - name: Download distribution packages
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Install package from wheel
      run: |
        python -m pip install --upgrade pip
        python -m pip install dist/*.whl
    
    - name: Test CLI is available
      run: |
        pypgsvg --help || echo "CLI test completed"

  publish-to-pypi:
    name: Publish to PyPI ðŸš€
    if: startsWith(github.ref, 'refs/tags/')  # Only publish on tag pushes
    needs: [build, test]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pypgsvg
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish to TestPyPI ðŸ§ª
    needs: [build, test]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pypgsvg
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish distribution ðŸ“¦ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
